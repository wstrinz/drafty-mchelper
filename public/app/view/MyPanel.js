/*
 * File: app/view/MyPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyPanel', {
    extend: 'Ext.panel.Panel',

    height: 691,
    width: 1000,
    title: 'Draftymchelper',

    initComponent: function() {
        var me = this;
        var store = Ext.create('Ext.data.Store', {
            storeId:'playersStore',
            fields:[{name:'Overall Rank',type:'int'}, {name:'Position Rank',type:'int'}, 'Player', 'Position', 'Team', {name:'Bye Week',type:'int'}, 'Drafted'],
            data:{'items':[
                { 'Overall Rank': '1', 'Position Rank':'1', 'Player':'Tony Romo',  'Position':'QB', 'Team':'vikings', 'Bye Week':'-1', 'Drafted': false  },
            ]},
            proxy: {
                type: 'memory',
                reader: {
                    type: 'json',
                    root: 'items'
                }
            }
        });

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    height: 499,
                    width: 724,
                    title: 'Players',
                    store: store,
                    columns: [
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'Overall Rank',
                            text: 'Rank',
                            format: '0'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'Position Rank',
                            text: 'Position Rank',
                            format: '0'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Player',
                            text: 'Player'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Position',
                            text: 'Position'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'Team',
                            text: 'Team'
                        },
                        {
                            xtype: 'numbercolumn',
                            dataIndex: 'Bye Week',
                            text: 'Bye Week',
                            format: '0'
                        },
                        {
                            xtype: 'checkcolumn',

                            dataIndex: 'Drafted',
                            text: 'Drafted',
                        }
                    ]
                },
                {
                    xtype: 'button',
                    width: 80,
                    text: 'Load',
                    handler: function(){
                        Ext.Ajax.request({
                            method: 'GET',
                            url: 'load',
                            // params: {target: healthI.attr.src},
                            success: function(result){
                                msg = JSON.parse(result.responseText)
                                Ext.data.StoreManager.lookup('playersStore').loadRawData(msg)
                            }
                        })
                    }
                },
                { xtype: 'button', width: 50, disabled: true },
                {
                    xtype: 'cycle',
                    width: 225,
                    showText: true,
                    textAlign: 'center',
                    prependText: 'Show ',
                    menu: {
                        xtype: 'menu',
                        width: 120,
                        items: [
                            {
                                xtype: 'menucheckitem',
                                text: 'All',
                                checked: true
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'Undrafted'
                            }
                        ]
                    },
                    changeHandler: function(cycleBtn, activeItem) {
                        me.draftedFilter = activeItem.text
                        if(activeItem.text == "All"){
                            Ext.data.StoreManager.lookup('playersStore').clearFilter()
                            if(me.positionFilter && me.positionFilter != "All")
                                Ext.data.StoreManager.lookup('playersStore').filter("Position", me.positionFilter)
                        }
                        else{
                            Ext.data.StoreManager.lookup('playersStore').clearFilter()
                            Ext.data.StoreManager.lookup('playersStore').filter("Drafted", false)
                            if(me.positionFilter && me.positionFilter != "All")
                                Ext.data.StoreManager.lookup('playersStore').filter("Position", me.positionFilter)
                        }
                    }
                },
                { xtype: 'button', width: 30, disabled: true },
                {
                    xtype: 'cycle',
                    width: 225,
                    showText: true,
                    prependText: 'Position: ',
                    menu: {
                        xtype: 'menu',
                        width: 120,
                        items: [
                            {
                                xtype: 'menucheckitem',
                                text: 'All',
                                checked: true
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'QB'
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'RB'
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'WR'
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'TE'
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'DEF'
                            },
                            {
                                xtype: 'menucheckitem',
                                text: 'K'
                            },
                        ]
                    },
                    changeHandler: function(cycleBtn, activeItem) {
                        me.positionFilter = activeItem.text
                        if(activeItem.text == "All"){
                            Ext.data.StoreManager.lookup('playersStore').clearFilter()
                            if(me.draftedFilter){
                                if(me.draftedFilter == "Undrafted"){
                                    Ext.data.StoreManager.lookup('playersStore').filter("Drafted", false)
                                }
                            }
                        }
                        else{
                            Ext.data.StoreManager.lookup('playersStore').clearFilter()
                            Ext.data.StoreManager.lookup('playersStore').filter("Position", activeItem.text)
                            if(me.draftedFilter){
                                if(me.draftedFilter == "Undrafted")
                                    Ext.data.StoreManager.lookup('playersStore').filter("Drafted", false)
                            }
                        }
                    }

                },
                { xtype: 'button', width: 60, disabled: true },
                {
                    xtype: 'button',
                    text: 'Save',
                    handler: function(){
                        msg = []
                        Ext.data.StoreManager.lookup('playersStore').clearFilter()

                        sto = Ext.data.StoreManager.lookup('playersStore')
                        for (var i = 0; i < sto.data.items.length; i++) {
                            msg.push(sto.data.items[i].data)
                        };
                        var json = Ext.encode(msg)
                        Ext.Ajax.request({
                            method: 'POST',
                            url: 'save',
                            params: {players: json},
                            success: function(result){
                                msg = JSON.parse(result.responseText)
                                Ext.data.StoreManager.lookup('playersStore').loadRawData(msg)
                            }
                        })
                        if(me.draftedFilter){
                            if(me.draftedFilter == "Undrafted")
                                Ext.data.StoreManager.lookup('playersStore').filter("Drafted", false)
                        }

                        if(me.positionFilter && me.positionFilter != "All")
                            Ext.data.StoreManager.lookup('playersStore').filter("Position", me.positionFilter)
                        // console.log(sto)
                        // console.log(sto.data)

                    }
                },
                { xtype: 'tbspacer', height: 40 },
                { xtype: 'label', text: "Find Optimal - " },
                {
                    xtype: 'panel',
                    layout: "hbox",
                    items: [
                        {
                            xtype: 'cycle',
                            width: 124,
                            showText: true,
                            prependText: 'Find: ',
                            id: 'findPosition',
                            menu: {
                                xtype: 'menu',
                                width: 120,
                                items: [
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'All',
                                        checked: true
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'QB'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'RB'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'WR'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'TE'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'DEF'
                                    },
                                    {
                                        xtype: 'menucheckitem',
                                        text: 'K'
                                    },
                                ]
                            },
                        },
                        { xtype: 'tbspacer', width: 20 },
                        { xtype: 'textfield', fieldLabel: 'Bye Week', id: 'byeWeek'  },
                        { xtype: 'tbspacer', width: 100 },
                        {
                            xtype: 'button', text: 'Find!', handler: function(){
                                Ext.Ajax.request({
                                    method: 'GET',
                                    url: 'best',
                                    params: {position: Ext.getCmp('findPosition').getActiveItem().text, bye: Ext.getCmp('byeWeek').getValue()},
                                    success: function(result){
                                        msg = result.responseText
                                        Ext.getCmp('findResult').setText(msg)
                                    }
                                })
                            }
                        },
                        { xtype: 'tbspacer', width: 20 },
                        {
                            xtype: 'label', text: 'Find Result', id: 'findResult'
                        },
                    ]
                },
            ]
        });

        Ext.Ajax.request({
            method: 'GET',
            url: 'load',
            // params: {target: healthI.attr.src},
            success: function(result){
                msg = JSON.parse(result.responseText)
                Ext.data.StoreManager.lookup('playersStore').loadRawData(msg)
            }
        })

        me.callParent(arguments);
    }

});